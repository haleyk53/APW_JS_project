const http = require('http');
const fs = require('fs');
const path = require('path');
const url = require('url');

// Example word list
const wordArray = [
  "dog", "cat", "bird", "dragon", "zebra", "lion", "tiger", "cheetah", "elephant"
];

function sortStrByLength(arr) {
  for (let i = 1; i < arr.length; i++) {
    let temp = arr[i];
    let j = i - 1;
    while (j >= 0 && temp.length < arr[j].length) {
      arr[j + 1] = arr[j];
      j--;
    }
    arr[j + 1] = temp;
  }
}

function linearSearchStrLength(array, value) {
  let vect = array.filter(word => word.length === value);

  if (vect.length === 0) {
    value--;
    vect = array.filter(word => word.length === value);
  }

  if (vect.length === 0) {
    return "";
  }

  if (vect.length === 1) {
    return vect[0];
  }

  const randomIndex = Math.floor(Math.random() * vect.length);
  return vect[randomIndex];
}

function compareStrings(str, strguess) {
  const result = [];
  const matched = Array(str.length).fill(false);
  const guessed = Array(str.length).fill(false);

  for (let i = 0; i < str.length; i++) {
    if (strguess[i].toLowerCase() === str[i].toLowerCase()) {
      result.push({ letter: strguess[i], color: 'green' });
      matched[i] = true;
      guessed[i] = true;
    } else {
      result.push({ letter: strguess[i], color: 'gray' });
    }
  }

  for (let i = 0; i < strguess.length; i++) {
    if (!guessed[i]) {
      for (let j = 0; j < str.length; j++) {
        if (!matched[j] && strguess[i].toLowerCase() === str[j].toLowerCase()) {
          result[i].color = 'yellow';
          matched[j] = true;
          break;
        }
      }
    }
  }

  return result;
}

// Initialize game setup
sortStrByLength(wordArray);
const maxWord = wordArray[wordArray.length - 1];
const wordLength = 5; // Example fixed length or you can randomize
const gameWord = linearSearchStrLength(wordArray, wordLength);

console.log(`Game word (for debug): ${gameWord}`); // Remove in production

const server = http.createServer((req, res) => {
  const parsedUrl = url.parse(req.url, true);

  if (req.method === 'GET' && parsedUrl.pathname === '/') {
    res.writeHead(200, { 'Content-Type': 'text/html' });
    res.end(generateHTML(wordLength));
  } else if (req.method === 'POST' && parsedUrl.pathname === '/guess') {
    let body = '';

    req.on('data', chunk => {
      body += chunk.toString();
    });

    req.on('end', () => {
      const params = new URLSearchParams(body);
      const userGuess = params.get('guess');

      if (userGuess.length !== wordLength) {
        res.writeHead(400, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify({ error: `Guess must be ${wordLength} letters.` }));
      } else {
        const feedback = compareStrings(gameWord, userGuess);
        const solved = feedback.every(l => l.color === 'green');
        res.writeHead(200, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify({ feedback, solved }));
      }
    });
  } else {
    res.writeHead(404);
    res.end('404 Not Found');
  }
});

function generateHTML(wordLength) {
  return `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Word Guess Game</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; text-align: center; }
    .letter { display: inline-block; width: 30px; height: 30px; line-height: 30px; margin: 2px; font-size: 20px; border: 1px solid #ccc; }
    .green { background-color: #8BC34A; }
    .yellow { background-color: #FFEB3B; }
    .gray { background-color: #e0e0e0; }
    .result { margin-top: 20px; }
  </style>
</head>
<body>
  <h1>Word Guess Game</h1>
  <p>Guess the ${wordLength}-letter word!</p>

  <form id="guess-form">
    <input type="text" id="guess" maxlength="${wordLength}" required />
    <button type="submit">Submit Guess</button>
  </form>

  <div class="result" id="result"></div>

  <script>
    const form = document.getElementById('guess-form');
    const resultDiv = document.getElementById('result');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const guessInput = document.getElementById('guess');
      const guess = guessInput.value;

      const response = await fetch('/guess', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: 'guess=' + encodeURIComponent(guess)
      });

      const data = await response.json();

      resultDiv.innerHTML = '';

      if (data.error) {
        resultDiv.textContent = data.error;
      } else {
        data.feedback.forEach(l => {
          const span = document.createElement('span');
          span.className = 'letter ' + l.color;
          span.textContent = l.letter;
          resultDiv.appendChild(span);
        });

        if (data.solved) {
          const winMsg = document.createElement('div');
          winMsg.innerHTML = "<h2>ðŸŽ‰ Congratulations! You guessed it!</h2>";
          resultDiv.appendChild(winMsg);
        }
      }

      guessInput.value = '';
    });
  </script>
</body>
</html>
  `;
}

const PORT = 3000;
server.listen(PORT, () => {
  console.log(`Server running at http://localhost:${PORT}/`);
});
